name: "trigger_manager"
description: "Менеджер триггеров: обрабатывает ивенты, ищет триггер, разворачивает сценарий и кладёт действия в очередь."
edition: "base"
singleton: true
dependencies:
  - "logger"
  - "scenarios_manager"
  - "database_service"
  - "trigger_processing"
  - "datetime_formatter"
  - "tg_bot_initializer"
  - "settings_manager"
optional_dependencies:
  - "permission_manager"
settings:
  cache_ttl_seconds:
    type: integer
    default: 15
    description: "Время жизни кэша событий для дедупликации (в секундах)"
  cleanup_frequency:
    type: integer
    default: 50
    description: "Частота очистки кэша (каждые N событий)"
interface:
  methods:
    handle_event:
      description: "Обработка входящего ивента (вызывается из bot_app)."
      input:
        event:
          type: dict
          description: "Ивент из Telegram или другого источника (dict c user_id, chat_id, message_id, callback_data и т.д.)"
      output:
        type: void
        description: "Нет возвращаемого значения"
actions:
  any:
    description: "Универсальные настройки для всех действий сценариев: управление цепочками действий, ограничения доступа, роли и разрешения."
    config_attrs:
      chain:
        type: [boolean, string, array]
        description: |
          Управляет зависимостью выполнения действия от статуса предыдущего действия в цепочке (подробнее см. в сценариях). 
      chain_drop:
        type: [string, array]
        description: |
          Статусы, при которых цепочка действий прерывается.
          Можно указать строку ("failed") или массив статусов (["failed", "error"]).
          Если текущий статус действия входит в этот список - вся цепочка прерывается.
          По умолчанию null (цепочка не прерывается).
    details: |
      Эти параметры применяются ко всем действиям сценариев и позволяют:
      - Управлять зависимостями между действиями в цепочке
      - Прерывать цепочку действий при определенных статусах

features:
  - "Поиск триггера по ивенту через triggers.yaml"
  - "Разворачивание сценария через scenarios_manager"
  - "Запись всех действий сценария в очередь БД (actions)"
  - "Логирование нераспознанных триггеров как warning"
  - "Специальная секция actions для описания атрибутов всех действий сценариев"
  - "Дедупликация событий для предотвращения повторной обработки"
  - "Поддержка фильтрации сообщений от ботов через bot_enabled"