#!/bin/bash

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Coreness
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: coreness-service [start|stop|restart|logs|status|update]

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
find_project_dir() {
    # –ò—â–µ–º –ø–∞–ø–∫—É coreness-service –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ -d "$HOME/coreness-service" ]; then
        echo "$HOME/coreness-service"
        return 0
    fi
    
    # –ò—â–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ -d "./coreness-service" ]; then
        echo "./coreness-service"
        return 0
    fi
    
    # –ò—â–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ -d "../coreness-service" ]; then
        echo "../coreness-service"
        return 0
    fi
    
    # –ò—â–µ–º –≤ /opt
    if [ -d "/opt/coreness-service" ]; then
        echo "/opt/coreness-service"
        return 0
    fi
    
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        echo -e "${RED}‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥
install_commands() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}   –£–°–¢–ê–ù–û–í–ö–ê –ì–õ–û–ë–ê–õ–¨–ù–´–• –ö–û–ú–ê–ù–î   ${NC}"
    echo -e "${BLUE}================================${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if [ "$EUID" -eq 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –æ—Ç root. –ö–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ.${NC}"
        INSTALL_DIR="/usr/local/bin"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ.${NC}"
        INSTALL_DIR="$HOME/.local/bin"
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p "$INSTALL_DIR"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –µ—Å–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω
        if ! echo "$PATH" | grep -q "$INSTALL_DIR"; then
            echo -e "${YELLOW}üí° –î–æ–±–∞–≤–ª—è–µ–º $INSTALL_DIR –≤ PATH...${NC}"
            echo "export PATH=\"\$PATH:$INSTALL_DIR\"" >> "$HOME/.bashrc"
            echo "export PATH=\"\$PATH:$INSTALL_DIR\"" >> "$HOME/.profile"
            echo -e "${GREEN}‚úÖ PATH –æ–±–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source ~/.bashrc${NC}"
        fi
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Å–∫—Ä–∏–ø—Ç—É
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    SCRIPT_PATH="$SCRIPT_DIR/coreness-service"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
    if cp "$SCRIPT_PATH" "$INSTALL_DIR/coreness-service"; then
        chmod +x "$INSTALL_DIR/coreness-service"
        echo -e "${GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ 'coreness-service' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã 'coreness-service'${NC}"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã
    create_aliases
    
    echo -e "${GREEN}üéâ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
    echo ""
    echo -e "${BLUE}–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:${NC}"
    echo "  coreness-service start     # –ó–∞–ø—É—Å–∫"
    echo "  coreness-service stop      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "  coreness-service restart   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "  coreness-service logs      # –õ–æ–≥–∏"
    echo "  coreness-service status    # –°—Ç–∞—Ç—É—Å"
    echo "  coreness-service update    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo "  coreness-service db        # –†–∞–±–æ—Ç–∞ —Å –ë–î"
    echo "  coreness-service shell     # Shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–∏–∞—Å–æ–≤
create_aliases() {
    echo -e "${YELLOW}üîó –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–æ–≤...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –≤ .bashrc
    ALIAS_FILE="$HOME/.bashrc"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–ª–∏–∞—Å—ã
    if ! grep -q "# Coreness aliases" "$ALIAS_FILE" 2>/dev/null; then
        echo "" >> "$ALIAS_FILE"
        echo "# Coreness aliases" >> "$ALIAS_FILE"
        echo "alias coreness-service-start='coreness-service start'" >> "$ALIAS_FILE"
        echo "alias coreness-service-stop='coreness-service stop'" >> "$ALIAS_FILE"
        echo "alias coreness-service-restart='coreness-service restart'" >> "$ALIAS_FILE"
        echo "alias coreness-service-logs='coreness-service logs'" >> "$ALIAS_FILE"
        echo "alias coreness-service-status='coreness-service status'" >> "$ALIAS_FILE"
        echo "alias coreness-service-update='coreness-service update'" >> "$ALIAS_FILE"
        echo "alias coreness-service-db='coreness-service db'" >> "$ALIAS_FILE"
        echo "alias coreness-service-shell='coreness-service shell'" >> "$ALIAS_FILE"
        
        echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã —Å–æ–∑–¥–∞–Ω—ã${NC}"
    else
        echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞
start_coreness-service() {
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ Coreness...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ install.sh –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker-compose up -d; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω${NC}"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º main.py
        echo -e "${YELLOW}üì± –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
        if docker-compose exec -d coreness-service python main.py; then
            echo -e "${GREEN}‚úÖ Coreness –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ${NC}"
            echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: coreness-service logs${NC}"
        fi
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_coreness-service() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Coreness...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    if docker-compose down; then
        echo -e "${GREEN}‚úÖ Coreness –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_coreness-service() {
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Coreness...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"
    docker-compose down
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫...${NC}"
    if docker-compose up -d; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º main.py
        echo -e "${YELLOW}üì± –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
        if docker-compose exec -d coreness-service python main.py; then
            echo -e "${GREEN}‚úÖ Coreness –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ${NC}"
            echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: coreness-service logs${NC}"
        fi
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
logs_coreness-service() {
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    docker-compose logs -f
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
status_coreness-service() {
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å Coreness:${NC}"
    docker-compose ps
    
    echo -e "\n${BLUE}üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    docker stats --no-stream coreness-container 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
db_coreness() {
    echo -e "${YELLOW}üóÑ –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if ! docker-compose ps | grep -q "coreness-container.*Up"; then
        echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞—é...${NC}"
        docker-compose up -d
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º database_manager.py —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    shift  # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç (db)
    docker-compose exec coreness-service python tools/database_manager.py "$@"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
shell_coreness-service() {
    echo -e "${YELLOW}üêö –ó–∞–ø—É—Å–∫ shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    cd "$PROJECT_DIR/docker"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if ! docker-compose ps | grep -q "coreness-container.*Up"; then
        echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞—é...${NC}"
        docker-compose up -d
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º bash –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    docker-compose exec coreness-service bash
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update_coreness-service() {
    echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Coreness...${NC}"
    
    PROJECT_DIR=$(find_project_dir)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç Coreness –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º core_updater.py
    python "$PROJECT_DIR/tools/core/core_updater.py"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo -e "${BLUE}Coreness - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: coreness-service [–∫–æ–º–∞–Ω–¥–∞] [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  install   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
    echo "  start     –ó–∞–ø—É—Å—Ç–∏—Ç—å Coreness (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä + –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)"
    echo "  stop      –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Coreness"
    echo "  restart   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Coreness"
    echo "  logs      –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  status    –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  db        –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
    echo "  shell     –ó–∞–ø—É—Å—Ç–∏—Ç—å shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    echo "  update    –û–±–Ω–æ–≤–∏—Ç—å Coreness"
    echo "  help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  coreness-service install                    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã"
    echo "  coreness-service start                      # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
    echo "  coreness-service logs                       # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  coreness-service status                     # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  coreness-service db --all --migrate         # –ú–∏–≥—Ä–∞—Ü–∏—è –ë–î"
    echo "  coreness-service db actions --recreate-tables  # –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É"
    echo "  coreness-service shell                      # Shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –î–ª—è –∫–æ–º–∞–Ω–¥—ã install –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if [ "$1" = "install" ]; then
        install_commands
        exit 0
    fi
    
    # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–≤–µ—Ä—è–µ–º Docker
    check_docker
    
    case "${1:-help}" in
        start)
            start_coreness-service
            ;;
        stop)
            stop_coreness-service
            ;;
        restart)
            restart_coreness-service
            ;;
        logs)
            logs_coreness-service
            ;;
        status)
            status_coreness-service
            ;;
        db)
            db_coreness-service "$@"
            ;;
        shell)
            shell_coreness-service
            ;;
        update)
            update_coreness-service
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
